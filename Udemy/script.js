
// /* –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–∫:

// 1) –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é numberOfFilms –∏ –≤ –Ω–µ—ë –ø–æ–º–µ—Å—Ç–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å:
// '–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏?'

// 2) –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç personalMovieDB –∏ –≤ –Ω–µ–≥–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å —Ç–∞–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞:
//     - count - —Å—é–¥–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
//     - movies - –≤ —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
//     - actors - —Ç–æ–∂–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
//     - genres - —Å—é–¥–∞ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
//     - privat - –≤ —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å boolean(–ª–æ–≥–∏—á–µ—Å–∫–æ–µ) –∑–Ω–∞—á–µ–Ω–∏–µ false

// 3) –ó–∞–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –¥–≤–∞ —Ä–∞–∑–∞ –≤–æ–ø—Ä–æ—Å—ã:
//     - '–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?'
//     - '–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?'
// –û—Ç–≤–µ—Ç—ã —Å—Ç–æ–∏—Ç –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// –ó–∞–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –≤ –æ–±—ä–µ–∫—Ç movies –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 
//     movies: {
//         'logan': '8.1'
//     }

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ–±—ã –≤—Å–µ —Ä–∞–±–æ—Ç–∞–ª–æ –±–µ–∑ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ */



let numberOfFilms;


let start = () => {
    numberOfFilms = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏', '');

    while (numberOfFilms == '' || numberOfFilms == null || isNaN(numberOfFilms)) {
        numberOfFilms = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏', '');
    }
}
// start();

const personalMovieDB = {
    count: numberOfFilms,
    movies: {},
    actors: {},
    genres: [],
    privat: false
};


const a = prompt('–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?', ''),
    b = prompt('–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?', ''),
    c = prompt('–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?', ''),
    d = prompt('–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?', '');


personalMovieDB.movies[a] = b;
personalMovieDB.movies[c] = d;




// let rememberMyFilms = () => {
//     for (let i = 0; i < 2; i++) {
//         const a = prompt('–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?', ''),
//             b = prompt('–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?', '');

//         if (a != null && b != null && a != '' && b != '' && a.length < 50) {
//             personalMovieDB.movies[a] = b;
//             console.log('DONE');
//         }
//         else {
//             console.log('ERROR');
//             i--; //vozrashaemsja na 1 eteraciju nazad,zadajom zanovo voprosi;
//         }
//     }
// }

// rememberMyFilms();





// let detectPersonalLevle = () => {
//     if (personalMovieDB.count < 10) {
//         console.log("Prosmotreno dovoljno malo filjmov");
//     }
//     else if (personalMovieDB.count >= 10 && personalMovieDB.count < 30) {
//         console.log("Vi klasnioj zritelj");
//     }
//     else if (personalMovieDB.count >= 30) {
//         console.log("Vi kinoman");

//     }
//     else {
//         console.log("Proizoshla oshibka");
//     }
// }

// // detectPersonalLevle();


let showMyDB = (hidden) => {
    if (!hidden) {
        console.log(personalMovieDB);
    }
}
showMyDB(personalMovieDB.privat);


let writeYourGenres = () => {
    for (let i = 1; i <= 3; i++) {
        const genre = prompt(`–í–∞—à –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${i}`);
        personalMovieDB.genres[i - 1] = genre;
    }
}
writeYourGenres();


// // personalMovieDB.movies ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ.
// // [a] ‚Äî —ç—Ç–æ –∫–ª—é—á (–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞), –≤–∑—è—Ç–æ–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a. –¢–∞–∫ –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–∞–º, –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º –∫–∞–∂–¥—ã–π —Ä–∞–∑. –° –ø–æ–º–æ—â—å—é –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫ [a] –º—ã –º–æ–∂–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–¥–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –æ–±—ä–µ–∫—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a.
// // = b ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∫–ª—é—á—É [a]. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ –æ—Ü–µ–Ω–∫–∞ —Ñ–∏–ª—å–º–∞, –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∏ —Ö—Ä–∞–Ω—è—â–∞—è—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b.
// // –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "Inception" –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a –∏ "9" –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b, —Ç–æ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ–∑–¥–∞—Å—Ç –≤ personalMovieDB.movies —Å–≤–æ–π—Å—Ç–≤–æ —Å –∏–º–µ–Ω–µ–º Inception –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º 9.





// for (let i = 1; i < 8; i++) {
//     console.log(i);
// }

// console.log(NaN || 2 || undefined);

// console.log(NaN && 2 && undefined);

// console.log(1 && 2 && 3);

// console.log(!1 && 2 || !3); // &&-–∏–¥–µ—ë—Ç –ø–µ—Ä–≤—ã–º,–ø–æ—Ç–æ–º ||)//

// console.log(25 || null && !3);

// console.log(NaN || null || !3 || undefined || 5);

// console.log(NaN || null && !3 && undefined || 5);

// console.log(5 === 5 && 3 > 1 || 5);


// const hamburger = 3;
// const fries = 3;
// const cola = 0;
// const nuggets = 2;


// if (hamburger === 3 && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }



// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;


// if (hamburger && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }


// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;


// if (hamburger || cola || fries === 3 || nuggets) {
//     console.log('Done!')
// }


////////////////////////–í–õ–û–ñ–ò–ù–û–°–¢–¨ –¶–ò–ö–õ–û–í////////////////////
// let result = '';
// const length = 7;

// for (let i = 1; i < length; i++) {
//     for (let j = 0; j < i; j++) {
//         result += "*";
//     }
//     result += '\n'; //perenos stroki//
// }
// console.log(result);


// first: for (let i = 0; i < 3; i++) {
//     console.log(`First level : ${i}`);

//     for (let j = 0; j < 3; j++) {
//         console.log(`Second level : ${j}`);

//     }
//     for (let k = 0; k < 3; k++) {
//         if (k === 2) continue first; //first - eto metka//
//         console.log(`Second level : ${k}`);
//     }
// }


//HOME WORK

// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ—Ç 5 –¥–æ 10 –≤ –∫–æ–Ω—Å–æ–ª—å. 5 –∏ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –¶–∏–∫–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π

// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ for –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –æ—Ç 20 –¥–æ 10 –≤ –∫–æ–Ω—Å–æ–ª—å. –í –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (20, 19, 18...). –ö–æ–≥–¥–∞ —Ü–∏–∫–ª –¥–æ–π–¥–µ—Ç –¥–æ —á–∏—Å–ª–∞ 13 - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Å—å —Ü–∏–∫–ª

// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ for –≤—ã–≤–µ–¥–∏—Ç–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ

// –ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ —Ü–∏–∫–ª  for –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç —Å while. –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–º –∂–µ. –ù–µ —Å–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª! –ò–Ω–∞—á–µ –±—Ä–∞—É–∑–µ—Ä –º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–Ω—É—Ç—å.

//  –¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å:

//  for (let i = 2; i <= 16; i++) {
//      if (i % 2 === 0) {
//          continue;
//      } else {
//          console.log(i);
//      }
//  }
// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä–∞–º–∏ –æ—Ç 5 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º: arr[0]

// –û—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º —ç—Ç–∏—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç: —Å—Å—ã–ª–∫–∞

// –ï—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ –¥—Ä—É–≥–æ–º—É, –Ω–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è - —Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ. –ù–∞–ø—Ä–∏–º–µ—Ä, <11 –∏ <=10 –≤ —É—Å–ª–æ–≤–∏—è—Ö —Ü–∏–∫–ª–∞ –¥–∞–¥—É—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// –ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üôÇ


// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ—Ç 5 –¥–æ 10 –≤ –∫–æ–Ω—Å–æ–ª—å. 5 –∏ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –¶–∏–∫–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π
// for (let i = 5; i < 11; i++) {
//     console.log(i);
// }

// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ for –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –æ—Ç 20 –¥–æ 10 –≤ –∫–æ–Ω—Å–æ–ª—å. –í –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (20, 19, 18...). –ö–æ–≥–¥–∞ —Ü–∏–∫–ª –¥–æ–π–¥–µ—Ç –¥–æ —á–∏—Å–ª–∞ 13 - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Å—å —Ü–∏–∫–ª

// for (let i = 20; i > 9; i--) {
//     if (i === 13) {
//         break;
//     }
//     console.log(i);
// }



// –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ü–∏–∫–ª–∞ for –≤—ã–≤–µ–¥–∏—Ç–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
// for (let i = 2; i <= 10; i++) {
//     if (i % 2 === 0) {
//         console.log(i);
//     }
// }


// –ú–µ—Å—Ç–æ –¥–ª—è —á–µ—Ç–≤–µ—Ä—Ç–æ–π –∑–∞–¥–∞—á–∏

// –¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å:

// for (let i = 2; i <= 16; i++) {
//     if (i % 2 === 0) {
//         continue;
//     } else {
//         console.log(i);
//     }
// }

// // let i = 2;
// // while (i <= 16) {
// //     if (i % 2 === 0) { //proverjaet chetnoe ili ne chetnoe...
//             i++;
// //         continue;
// //     }
// //     else {
// //         console.log(i);
// //     }
// // }


// –ú–µ—Å—Ç–æ –¥–ª—è –ø—è—Ç–æ–π –∑–∞–¥–∞—á–∏

// function fifthTask() {
//     const arrayOfNumbers = [];

//     for (let i = 5; i < 11; i++) {
//         arrayOfNumbers[i - 5] = i;
//     }

//     console.log(arrayOfNumbers);
//     return arrayOfNumbers;
// }

// fifthTask()

// –°—Ç—Ä–æ–∫–∞ arrayOfNumbers[i - 5] = i –¥–µ–ª–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ:

// –û–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞ (i - 5) –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ i.
// –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –∏–Ω–¥–µ–∫—Å–∞ 0, –¥–∞–∂–µ –µ—Å–ª–∏ —Ü–∏–∫–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å i = 5.

// //–ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ –≤—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ i –≤ –º–∞—Å—Å–∏–≤ arrayOfNumbers:

// –ò–Ω–¥–µ–∫—Å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ i - 5. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω—è—Ç—å –º–∞—Å—Å–∏–≤ –Ω–∞—á–∏–Ω–∞—è —Å –Ω—É–ª–µ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞.
// –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤, —Ä–∞–≤–Ω–æ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é i.
// –ü—Ä–∏–º–µ—Ä –∏—Ç–µ—Ä–∞—Ü–∏–π:

// –ö–æ–≥–¥–∞ i = 5, i - 5 = 0, —Ç–∞–∫ —á—Ç–æ arrayOfNumbers[0] = 5.
// –ö–æ–≥–¥–∞ i = 6, i - 5 = 1, —Ç–∞–∫ —á—Ç–æ arrayOfNumbers[1] = 6.
// –ö–æ–≥–¥–∞ i = 10, i - 5 = 5, —Ç–∞–∫ —á—Ç–æ arrayOfNumbers[5] = 10.
// –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –º–∞—Å—Å–∏–≤ arrayOfNumbers –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å: [5, 6, 7, 8, 9, 10].



// function firstTask() {
//     const arr = [3, 5, 8, 16, 20, 23, 50];
//     const result = [];

//     for (let i = 0; i < arr.length; i++) {
//         result[i] = arr[i];
//     }

//     console.log(result);
//     return result;
// }

// firstTask();

// function secondTask() {
//     const data = [5, 10, 'Shopping', 20, 'Homework'];

//     for (let i = 0; i < data.length; i++) {
//         if (typeof(data[i]) === 'number') {
//             data[i] = data[i] * 2;
//         } else if (typeof(data[i]) === 'string') {
//             data[i] = `${data[i]} - done`;
//         }
//     }

//     console.log(data);
//     return data;
// }

// secondTask();

// function thirdTask() {
//     const data = [5, 10, 'Shopping', 20, 'Homework'];
//     const result = [];

//     for (let i = 1; i <= data.length; i++) {
//         result[i - 1] = data[data.length - i]
//     }

//     console.log(result);
//     return result;
// }

// thirdTask();


// –†–∞–∑–±–µ—Ä–µ–º –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å:

// let i = 1;: –¶–∏–∫–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π i = 1.
// i <= data.length;: –¶–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ–∫–∞ i –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –º–∞—Å—Å–∏–≤–∞ data. –î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ data —Ä–∞–≤–Ω–∞ 5, –ø–æ—ç—Ç–æ–º—É —Ü–∏–∫–ª –ø—Ä–æ–π–¥–µ—Ç 5 —Ä–∞–∑.
// i++: –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ i —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1.
// –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ:

// data.length - i:
// –≠—Ç–æ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ data, –∫–æ—Ç–æ—Ä—ã–π –º—ã –±–µ—Ä–µ–º.
// –ò–Ω–¥–µ–∫—Å –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Ç–∞–∫, —á—Ç–æ–±—ã —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã–±–∏—Ä–∞–ª–∏—Å—å —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞.
// result[i - 1]:
// –≠—Ç–æ –º–µ—Å—Ç–æ –≤ –º–∞—Å—Å–∏–≤–µ result, –∫—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç –∏–∑ data.
// –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Ü–∏–∫–ª–∞
// –î–ª—è –º–∞—Å—Å–∏–≤–∞ data = [5, 10, 'Shopping', 20, 'Homework']:

// –ù–∞ –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (i = 1):

// data.length - i = 5 - 1 = 4 ‚Üí –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º 4 –∏–∑ –º–∞—Å—Å–∏–≤–∞ data: 'Homework'.
// result[i - 1] = result[0] ‚Üí –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 'Homework' –≤ result[0].
// –ú–∞—Å—Å–∏–≤ result —Ç–µ–ø–µ—Ä—å: ['Homework'].
// –ù–∞ –≤—Ç–æ—Ä–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (i = 2):

// data.length - i = 5 - 2 = 3 ‚Üí –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º 3 –∏–∑ –º–∞—Å—Å–∏–≤–∞ data: 20.
// result[i - 1] = result[1] ‚Üí –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 20 –≤ result[1].
// –ú–∞—Å—Å–∏–≤ result —Ç–µ–ø–µ—Ä—å: ['Homework', 20].
// –ù–∞ —Ç—Ä–µ—Ç—å–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (i = 3):

// data.length - i = 5 - 3 = 2 ‚Üí –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º 2 –∏–∑ –º–∞—Å—Å–∏–≤–∞ data: 'Shopping'.
// result[i - 1] = result[2] ‚Üí –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 'Shopping' –≤ result[2].
// –ú–∞—Å—Å–∏–≤ result —Ç–µ–ø–µ—Ä—å: ['Homework', 20, 'Shopping'].
// –ù–∞ —á–µ—Ç–≤–µ—Ä—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (i = 4):

// data.length - i = 5 - 4 = 1 ‚Üí –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º 1 –∏–∑ –º–∞—Å—Å–∏–≤–∞ data: 10.
// result[i - 1] = result[3] ‚Üí –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 10 –≤ result[3].
// –ú–∞—Å—Å–∏–≤ result —Ç–µ–ø–µ—Ä—å: ['Homework', 20, 'Shopping', 10].
// –ù–∞ –ø—è—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (i = 5):

// data.length - i = 5 - 5 = 0 ‚Üí –ë–µ—Ä–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –∏–∑ –º–∞—Å—Å–∏–≤–∞ data: 5.
// result[i - 1] = result[4] ‚Üí –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 5 –≤ result[4].
// –ú–∞—Å—Å–∏–≤ result —Ç–µ–ø–µ—Ä—å: ['Homework', 20, 'Shopping', 10, 5].

// –†–µ–∑—é–º–µ
// –§—É–Ω–∫—Ü–∏—è thirdTask:

// –ë–µ—Ä–µ—Ç –º–∞—Å—Å–∏–≤ data –∏ —Å–æ–∑–¥–∞–µ—Ç –∏–∑ –Ω–µ–≥–æ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ result, –≥–¥–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–¥—É—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
// –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ü–∏–∫–ª for –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —Å –∫–æ–Ω—Ü–∞ (data.length - i).
// –ò—Ç–æ–≥–æ–≤—ã–π –º–∞—Å—Å–∏–≤ result:

// css
// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
// ['Homework', 20, 'Shopping', 10, 5]
// –≠—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–π –ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.


//24 Funkcija,strelochkaja funkcija//

// let showFirstMessage = (text) => {
//     console.log(text);
//     let num = 20;// Peremennaja sozdanata vnutri funkcii ostajotsja toljko tam,nazivaetsja lokaljnoj.
// }
// showFirstMessage("PRRIIVET");//Kogda funkcija zapoustitsja,ona vozjmot stroku,chto mi ej peredali, podstavit ee v argumet v mesto (text) i v console.log vivedit "PRRIIVET"


// let calc = (a, b) => {
//     return (a + b);//----Posle return kod zakanchivaetsja i dalsjhe ne viponjaetsja.//
// }
// console.log(calc(4, 3));


// let ret = () => {
//     let num = 50;
//     return num;
// }
// const anotherNum = ret();
// console.log(anotherNum);


//25 Argumenti funkcii
// const usdCurr = 28;
// const eurCurr = 132;

// let convert = (amount, curr) => {
//     console.log(curr * amount);
// }
// convert(500, usdCurr);
// convert(500, eurCurr);

//26 funkcija . return


// const usdCurr = 28;
// const discount = 0.9;

// let convert = (amount, curr) => {
//     return curr * amount;
// }
// let promotion = (result) => {
//     console.log(result * discount);
// }
// const res = convert(500, usdCurr);
// promotion(res);


// let test = () => {
//     for (let i = 0; i < 5; i++) {
//         console.log(i);
//         if (i === 3) return
//     }
//     console.log('DONE');
// }
// test();




////////////////////////////////////////////DOMASHKA////////////////////////////

// 1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º —á–µ–ª–æ–≤–µ–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É.

// –ü—Ä–∏–º–µ—Ä: –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ sayHello('–ê–Ω—Ç–æ–Ω') –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–ü—Ä–∏–≤–µ—Ç, –ê–Ω—Ç–æ–Ω!". –í —Ä–µ—à–µ–Ω–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –Ω—É–∂–Ω–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ –≤–∞—Å.

// P.S. –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å - —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ return.

// P.S.S. –≠—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –¥–∞–ª—å—à–µ –ø–æ –∫—É—Ä—Å—É –±—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—â–µ –º–Ω–æ–≥–æ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–∞—Ö.

// 2) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è 1 –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª: –æ–¥–Ω–æ –Ω–∞ 1 –º–µ–Ω—å—à–µ, —Å–∞–º –∞—Ä–≥—É–º–µ–Ω—Ç, –∏ —á–∏—Å–ª–æ –Ω–∞ 1 –±–æ–ª—å—à–µ.

// –ü—Ä–∏–º–µ—Ä: –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ returnNeighboringNumbers(5) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –≤–∏–¥–µ [4, 5, 6].

// 3) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –æ–±–∞ —á–∏—Å–ª–∞. –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ - —ç—Ç–æ –±–∞–∑–∞, –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ - —ç—Ç–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏. (–°–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ). –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É (–∏–ª–∏ —á–∏—Å–ª–æ –≤ –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞—è—Ö, –æ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∏–∂–µ), –≥–¥–µ —ç—Ç–∏ —á–∏—Å–ª–∞ –∏–¥—É—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç—Ä–µ–º—è –¥–µ—Ñ–∏—Å–∞–º–∏ "---". –ü–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∏—Å–ª–∞ –∏—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å.

// –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, —Ä–∞–≤–µ–Ω –∏–ª–∏ –º–µ–Ω—å—à–µ –Ω—É–ª—è - —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. (–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä typeof)

// –ü—Ä–∏–º–µ—Ä—ã:

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(5, 3) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 5---10---15

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(3, 10) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 3---6---9---12---15---18---21---24---27---30

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, 5) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10---20---30---40---50

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, '5') –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, 0) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(20, -5) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 20

// –ú–µ—Å—Ç–æ –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏
// function sayHello(dmyto) {
//     return 'Privet,Dmytro'
// }
// sayHello(dmytro);

// // –ú–µ—Å—Ç–æ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∑–∞–¥–∞—á–∏
// function returnNeighboringNumbers() {

// }

// // –ú–µ—Å—Ç–æ –¥–ª—è —Ç—Ä–µ—Ç—å–µ–π –∑–∞–¥–∞—á–∏
// function getMathResult() {

// }


/////otveti//
// function sayHello(name) {
//     return `–ü—Ä–∏–≤–µ—Ç, ${name}!`;
// }

// console.log(sayHello('Erick'));

// function returnNeighboringNumbers(num) {
//     return [num - 1, num, num + 1];
// }

// console.log(returnNeighboringNumbers(5));

// function getMathResult(num, times) {
//     if (typeof (times) !== 'number' || times <= 0) {
//         return num;
//     }

//     let str = '';

//     for (let i = 1; i <= times; i++) {
//         if (i === times) {
//             str += `${num * i}`;
//             // –¢—É—Ç –±–µ–∑ —á–µ—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–Ω—Ü–µ
//         } else {
//             str += `${num * i}---`;
//             // –≠—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏
//             // str = str + num * i + "---"
//         }
//     }

//     return str;
// }

// getMathResult(10, 5);


// const logg = 'Hello world';
// console.log(logg.slice(4, 11));//METOD SLICE//
// console.log(logg.length);

// –ú–µ—Ç–æ–¥ .slice() –≤ JavaScript –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏, —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ (–∏–ª–∏ —Å—Ç—Ä–æ–∫—É) –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–∞. –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å (–æ—Ç–∫—É–¥–∞ –Ω–∞—á–∏–Ω–∞—Ç—å) –∏ –∫–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å (–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –Ω–æ —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è).

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
// javascript
// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
// array.slice(start, end)
// string.slice(start, end)
// start: –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
// end: –∏–Ω–¥–µ–∫—Å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ (–Ω–µ –≤–∫–ª—é—á–∞—è –µ–≥–æ). –ï—Å–ª–∏ —ç—Ç–æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–Ω, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞/—Å—Ç—Ä–æ–∫–∏.
// –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è –º–∞—Å—Å–∏–≤–∞
// 1. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞:
// javascript
// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
// let fruits = ['apple', 'banana', 'cherry', 'date', 'fig'];

// let slicedFruits = fruits.slice(1, 3); // –ë–µ—Ä—ë–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω–¥–µ–∫—Å–∞ 1 –¥–æ 3 (–Ω–µ –≤–∫–ª—é—á–∞—è)
// console.log(slicedFruits); // ['banana', 'cherry']

// console.log(fruits); // ['apple', 'banana', 'cherry', 'date', 'fig'] (–æ—Ä–∏–≥–∏–Ω–∞–ª –Ω–µ –∏–∑–º–µ–Ω—ë–Ω)


